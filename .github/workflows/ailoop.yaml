name: AI Fix Loop

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: true
        default: 'main'
        type: string
      attempts:
        description: Maximum number of attempts
        default: '40'

permissions:
  contents: write
  pull-requests: write

jobs:
  loop:
    name: AI Fix Loop
    runs-on: ubuntu-latest
    timeout-minutes: 360  # Maximum allowed by GitHub
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Build
        run: cargo build

      - name: Run AI Fix
        timeout-minutes: 360
        env:
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          FIREWORKS_AI_API_KEY: ${{ secrets.FIREWORKS_AI_API_KEY }}
          RUST_TEST_TIMEOUT: 300
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          echo "SHORT_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
          attempts=${{ github.event.inputs.attempts }}
          success=0

          for i in $(seq 1 $attempts); do
              echo "=== Attempt $i/$attempts ===" | tee -a attempts.txt
              
              # Capture both stdout and stderr
              cargo test -- --test-threads=1 2>&1 | tee current.txt
              test_exit_code=${PIPESTATUS[0]}
              
              # Save full test output
              cat current.txt >> attempts.txt
              echo -e "\n\n" >> attempts.txt

              # Exit if tests pass
              if [ $test_exit_code -eq 0 ]; then
                  success=1
                  echo "ATTEMPTS=$i" >> $GITHUB_ENV
                  break
              fi

  
              askds --fix --auto-apply --system-prompt=./prompts/fix-tests.txt "$(cat current.txt)"

              # Check for changes
              if ! git diff --quiet; then
                  git add .
                  git commit -m "fix attempt $i (tokenizer)"
                  echo "Applied fixes for tokenizer tests" | tee -a attempts.txt
              else
                  echo "No changes in attempt $i" | tee -a attempts.txt
                  continue
              fi
          done

          if [ $success -ne 1 ]; then
              echo "ATTEMPTS=$attempts" >> $GITHUB_ENV
              echo "::error::Failed after $attempts attempts"
              exit 1
          fi

      - name: Upload attempts log
        uses: actions/upload-artifact@v3
        with:
          name: attempts-log
          path: attempts.txt

      - name: Push changes
        if: success()
        run: |
          git checkout -b ${{ github.event.inputs.branch }}-ai-fix-${{ env.SHORT_DATE }}
          git push origin ${{ github.event.inputs.branch }}-ai-fix-${{ env.SHORT_DATE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "AI Fix"
          title: "AI Fix for ${{ github.event.inputs.branch }} (Attempts: ${{ env.ATTEMPTS }})"
          body: |
            ## AI Fix Results
            - Total attempts made: ${{ env.ATTEMPTS }}
            - Source branch: ${{ github.event.inputs.branch }}
            - Fix branch: ${{ github.event.inputs.branch }}-ai-fix-${{ env.SHORT_DATE }}
            
            **Important Notes:**
            - Review all changes carefully
            - Verify test results
            - Check the [workflow artifacts](#) for detailed attempt logs
          branch: ${{ github.event.inputs.branch }}-ai-fix-${{ env.SHORT_DATE }}
          base: ${{ github.event.inputs.branch }}