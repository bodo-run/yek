name: AI Fix Loop

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: true
        default: 'main'
        type: string
      attempts:
        description: Maximum number of attempts
        default: '40'

permissions:
  contents: write
  pull-requests: write

jobs:
  loop:
    name: AI Fix Loop
    runs-on: ubuntu-latest
    timeout-minutes: 360  # Maximum allowed by GitHub
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Build
        run: cargo build

      - name: Run AI Fix
        env:
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          FIREWORKS_AI_API_KEY: ${{ secrets.FIREWORKS_AI_API_KEY }}
        run: |
          # Set up environment
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          echo "SHORT_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

          # Initialize variables
          branch="${{ github.event.inputs.branch}}"
          max_attempts="${{ github.event.inputs.attempts}}"
          success=0
          attempts_made=0

          # Main loop with error handling
          for ((i=1; i<=max_attempts; i++)); do
            echo "=== Attempt $i/$max_attempts ===" | tee -a attempts.txt
            
            # Run tests with timeout
            timeout 15m cargo test > current.txt 2>&1 || true
            test_exit_code=$?
            
            # Log test results
            {
              echo "Test exit code: $test_exit_code"
              cat current.txt
              echo -e "\n\n"
            } >> attempts.txt

            # Exit loop if tests passed
            if [ $test_exit_code -eq 0 ]; then
              success=1
              attempts_made=$i
              break
            fi

            # Apply AI fix
            echo "Applying AI fix..." | tee -a attempts.txt
            askds --fix --auto-apply --hide-reasoning \
              --system-prompt=./prompts/fix-tests.txt \
              "$(cat current.txt)" >> attempts.txt 2>&1 || true

            # Check for changes
            if git diff --quiet; then
              echo "No changes applied" >> attempts.txt
              continue
            fi

            # Commit changes
            git add . >> attempts.txt 2>&1
            git commit -m "AI fix attempt $i" >> attempts.txt 2>&1 || true

            # Verify changes with timeout
            timeout 15m cargo test > current.txt 2>&1 || true
            test_exit_code=$?
            
            # Log verification results
            {
              echo "Post-fix test exit code: $test_exit_code"
              cat current.txt
              echo -e "\n\n"
            } >> attempts.txt

            # Break if successful after fix
            if [ $test_exit_code -eq 0 ]; then
              success=1
              attempts_made=$i
              break
            fi
          done

          # Set final status
          if [ $success -eq 1 ]; then
            echo "ATTEMPTS=$attempts_made" >> $GITHUB_ENV
            echo "Success after $attempts_made attempts"
          else
            echo "ATTEMPTS=$max_attempts" >> $GITHUB_ENV
            echo "Failed after $max_attempts attempts"
            exit 1
          fi

      - name: Upload attempts log
        uses: actions/upload-artifact@v3
        with:
          name: attempts-log
          path: attempts.txt

      - name: Push changes
        if: success()
        run: |
          git checkout -b ${{ github.event.inputs.branch }}-ai-fix-${{ env.SHORT_DATE }}
          git push origin ${{ github.event.inputs.branch }}-ai-fix-${{ env.SHORT_DATE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "AI Fix"
          title: "AI Fix for ${{ github.event.inputs.branch }} (Attempts: ${{ env.ATTEMPTS }})"
          body: |
            ## AI Fix Results
            - Total attempts made: ${{ env.ATTEMPTS }}
            - Source branch: ${{ github.event.inputs.branch }}
            - Fix branch: ${{ github.event.inputs.branch }}-ai-fix-${{ env.SHORT_DATE }}
            
            **Important Notes:**
            - Review all changes carefully
            - Verify test results
            - Check the [workflow artifacts](#) for detailed attempt logs
          branch: ${{ github.event.inputs.branch }}-ai-fix-${{ env.SHORT_DATE }}
          base: ${{ github.event.inputs.branch }}